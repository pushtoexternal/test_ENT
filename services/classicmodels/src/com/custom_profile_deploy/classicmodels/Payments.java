/*Copyright (c) 2016-2017 profiles.com All Rights Reserved.
 This software is the confidential and proprietary information of profiles.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with profiles.com*/
package com.custom_profile_deploy.classicmodels;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.Table;

/**
 * Payments generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`payments`")
@IdClass(PaymentsId.class)
public class Payments implements Serializable {

    private String checkNumber;
    private Integer customerNumber;
    private Date paymentDate;
    private BigDecimal amount;

    @Id
    @Column(name = "`checkNumber`", nullable = false, length = 50)
    public String getCheckNumber() {
        return this.checkNumber;
    }

    public void setCheckNumber(String checkNumber) {
        this.checkNumber = checkNumber;
    }

    @Id
    @Column(name = "`customerNumber`", nullable = false, scale = 0, precision = 10)
    public Integer getCustomerNumber() {
        return this.customerNumber;
    }

    public void setCustomerNumber(Integer customerNumber) {
        this.customerNumber = customerNumber;
    }

    @Column(name = "`paymentDate`", nullable = false)
    public Date getPaymentDate() {
        return this.paymentDate;
    }

    public void setPaymentDate(Date paymentDate) {
        this.paymentDate = paymentDate;
    }

    @Column(name = "`amount`", nullable = false, scale = 9, precision = 22)
    public BigDecimal getAmount() {
        return this.amount;
    }

    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Payments)) return false;
        final Payments payments = (Payments) o;
        return Objects.equals(getCheckNumber(), payments.getCheckNumber()) &&
                Objects.equals(getCustomerNumber(), payments.getCustomerNumber());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getCheckNumber(),
                getCustomerNumber());
    }
}