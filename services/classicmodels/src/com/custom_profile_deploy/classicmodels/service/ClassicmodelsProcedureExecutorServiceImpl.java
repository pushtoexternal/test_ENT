/*Copyright (c) 2016-2017 profiles.com All Rights Reserved.
 This software is the confidential and proprietary information of profiles.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with profiles.com*/
package com.custom_profile_deploy.classicmodels.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.util.HashMap;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.wavemaker.runtime.data.dao.procedure.WMProcedureExecutor;

import com.custom_profile_deploy.classicmodels.models.procedure.*;

@Service
public class ClassicmodelsProcedureExecutorServiceImpl implements ClassicmodelsProcedureExecutorService {

    private static final Logger LOGGER = LoggerFactory.getLogger(ClassicmodelsProcedureExecutorServiceImpl.class);

    @Autowired
    @Qualifier("classicmodelsWMProcedureExecutor")
    private WMProcedureExecutor procedureExecutor;

    @Transactional(value = "classicmodelsTransactionManager")
    @Override
    public SamplePResponse executeSampleP(String emails) {
        Map<String, Object> params = new HashMap<>(1);

        params.put("emails", emails);

        return procedureExecutor.executeNamedProcedure("sampleP", params, SamplePResponse.class);
    }

}